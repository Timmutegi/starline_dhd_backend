name: Deploy to AWS EC2

on:
 push:
   branches:
     - main

jobs:
 deploy:
   runs-on: ubuntu-latest

   env:
    AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}

   steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Debug SSH Key
      run: echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}"


    - name: get runner ip address
      id: ip
      uses: haythem/public-ip@v1.2


    - name: whitelist runner ip address
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32


    - name: ssh into your ec2 and do whatever
      run: |
        mkdir -p ~/.ssh && touch ~/.ssh/id_rsa
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa


    - name: Deploy code to EC2 Instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        script: |
          cd starline_dhd_backend
          git pull origin main
          sudo docker compose -f docker-compose-prod.yml build
          sudo docker compose -f docker-compose-prod.yml up -d


    - name: revoke runner ip address
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32